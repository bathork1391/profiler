
PLAY [vms] *********************************************************************

TASK [Gathering Facts] *********************************************************
[1;35mcore/2.17/reference_appendices/interpreter_discovery.html for more information.[0m
[0;32mok: [vm1][0m

TASK [Ensure binary directory exists] ******************************************
[0;32mok: [vm1][0m

TASK [Ensure script directory exists] ******************************************
[0;32mok: [vm1][0m

TASK [Ensure results directory exists] *****************************************
[0;32mok: [vm1][0m

TASK [Ensure test result subdirectories exist] *********************************
[0;32mok: [vm1] => (item=times)[0m

TASK [Copy binaries to VM] *****************************************************
[0;32mok: [vm1] => (item=trisolv_3.wasm)[0m

TASK [Copy binaries to VM (native)] ********************************************
[0;32mok: [vm1] => (item=trisolv_3_native)[0m

TASK [Set execute permission on copied binaries] *******************************
[0;32mok: [vm1] => (item=trisolv_3.wasm)[0m

TASK [Set execute permission on copied binaries (native)] **********************
[0;32mok: [vm1] => (item=trisolv_3_native)[0m

TASK [Copy scripts to VM] ******************************************************
[0;32mok: [vm1] => (item=times.py)[0m

TASK [Run tests on VM] *********************************************************
[0;33mchanged: [vm1] => (item=[3, {'name': 'times.py', 'active': True}])[0m

TASK [Display test results] ****************************************************
[0;32mok: [vm1] => {[0m
[0;32m    "test_results": {[0m
[0;32m        "changed": true,[0m
[0;32m        "msg": "All items completed",[0m
[0;32m        "results": [[0m
[0;32m            {[0m
[0;32m                "ansible_loop_var": "test_item",[0m
[0;32m                "changed": true,[0m
[0;32m                "cmd": "python3 /root/profiler/scripts/times.py trisolv 3",[0m
[0;32m                "delta": "0:00:00.366405",[0m
[0;32m                "end": "2024-07-22 19:57:47.002389",[0m
[0;32m                "failed": false,[0m
[0;32m                "invocation": {[0m
[0;32m                    "module_args": {[0m
[0;32m                        "_raw_params": "python3 /root/profiler/scripts/times.py trisolv 3",[0m
[0;32m                        "_uses_shell": true,[0m
[0;32m                        "argv": null,[0m
[0;32m                        "chdir": null,[0m
[0;32m                        "creates": null,[0m
[0;32m                        "executable": null,[0m
[0;32m                        "expand_argument_vars": true,[0m
[0;32m                        "removes": null,[0m
[0;32m                        "stdin": null,[0m
[0;32m                        "stdin_add_newline": true,[0m
[0;32m                        "strip_empty_ends": true[0m
[0;32m                    }[0m
[0;32m                },[0m
[0;32m                "msg": "",[0m
[0;32m                "rc": 0,[0m
[0;32m                "start": "2024-07-22 19:57:46.635984",[0m
[0;32m                "stderr": "",[0m
[0;32m                "stderr_lines": [],[0m
[0;32m                "stdout": "Native Execution Time: 0.015926530119031668s\nwasmer Execution Time: 0.1652511772699654s\nwasmtime Execution Time: 0.035500282887369394s\nError executing /root/profiler/compiled/trisolv_3.wasm with wavm: Host X86 CPU does not support SSE 4.1, which WAVM requires for WebAssembly SIMD code.\n\niwasm Execution Time: 0.11138030886650085s\nExecution times saved to /root/profiler/results/times/trisolv_3_times.json",[0m
[0;32m                "stdout_lines": [[0m
[0;32m                    "Native Execution Time: 0.015926530119031668s",[0m
[0;32m                    "wasmer Execution Time: 0.1652511772699654s",[0m
[0;32m                    "wasmtime Execution Time: 0.035500282887369394s",[0m
[0;32m                    "Error executing /root/profiler/compiled/trisolv_3.wasm with wavm: Host X86 CPU does not support SSE 4.1, which WAVM requires for WebAssembly SIMD code.",[0m
[0;32m                    "",[0m
[0;32m                    "iwasm Execution Time: 0.11138030886650085s",[0m
[0;32m                    "Execution times saved to /root/profiler/results/times/trisolv_3_times.json"[0m
[0;32m                ],[0m
[0;32m                "test_item": [[0m
[0;32m                    3,[0m
[0;32m                    {[0m
[0;32m                        "active": true,[0m
[0;32m                        "name": "times.py"[0m
[0;32m                    }[0m
[0;32m                ][0m
[0;32m            }[0m
[0;32m        ],[0m
[0;32m        "skipped": false[0m
[0;32m    }[0m
[0;32m}[0m

TASK [Verify result files exist on VM] *****************************************
[0;32mok: [vm1] => (item=[3, {'name': 'times.py', 'active': True}])[0m

PLAY RECAP *********************************************************************
[0;33mvm1[0m                        : [0;32mok=13  [0m [0;33mchanged=1   [0m unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
